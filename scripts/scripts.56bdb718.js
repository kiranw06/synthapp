"use strict";angular.module("synthappApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngStorage","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/synth",{templateUrl:"views/synth.html",controller:"SynthCtrl",controllerAs:"synth"}).when("/patches",{templateUrl:"views/patches.html",controller:"PatchesCtrl",controllerAs:"patches"}).when("/custom:patchName",{templateUrl:"views/custom.html",controller:"CustomCtrl",controllerAs:"custom"}).otherwise({redirectTo:"/"})}]),angular.module("synthappApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("synthappApp").controller("SynthCtrl",["$scope","$localStorage","$rootScope",function(a,b,c){a.storage=b,a.displayText="",a.isHidden=!0,a.showHide=function(){a.isHidden=a.isHidden?!1:!0,a.isVisible=a.isVisible?!0:!1},a.testaudio=function(){var b=new(window.AudioContext||window.webkitAudioContext);c.oscillator=b.createOscillator(),a.initialVol=0,a.gainNode=b.createGain(),a.initialFreq=261.6,a.maxFreq=4e3,a.frequencyArray={C:[{two:65.41,three:130.8,four:261.6,five:523.3,six:1047,seven:2093}]},a.gainNode.gain.value=a.initialVol,c.oscillator.frequency.value=a.initialFreq,a.gainNode.connect(b.destination),a.startSound=function(){c.oscillator.connect(a.gainNode)},c.oscillator.start()},a.savePatch=function(d){var e={patchName:d,oscillator:c.oscillator.type,frequency:c.oscillator.frequency.value};b.savedPatches||(b.savedPatches=[]),b.savedPatches.push(e);var f=!0;f===!0?(b.savedPatches.push(e),a.patchSaved={success:!0}):(console.log("patch already saved"),a.patchSaved={duplicate:!0})}}]),angular.module("synthappApp").controller("PatchesCtrl",["$scope","$localStorage",function(a,b){a.storage=b}]),angular.module("synthappApp").factory("current",function(){}),angular.module("synthappApp").service("synthesizer",function(){}),angular.module("synthappApp").controller("CustomCtrl",["$scope","$localStorage","$rootScope","$routeParams",function(a,b,c,d){a.storage=b,a.displayText="",a.isHidden=!0,a.showHide=function(){a.isHidden=a.isHidden?!1:!0,a.isVisible=a.isVisible?!0:!1},a.patchAudio=function(){for(var b=new(window.AudioContext||window.webkitAudioContext),e=0;e<a.storage.savedPatches.length;e++){a.currentPatch=d.patchName;var f=a.storage.savedPatches[e];f.patchName==a.currentPatch&&(b||(a.patch=f,console.log(a.patch),c.oscillator=b.createOscillator(),c.oscillator.type=a.patch.oscillator,console.log(a.patch.oscillator),a.gainNode=b.createGain(),c.initialVol=0,a.gainNode.gain.value=c.initialVol,c.oscillator.frequency.value=a.patch.frequency,console.log(a.patch.frequency)))}a.gainNode.connect(b.destination),a.startSound=function(){c.oscillator.connect(a.gainNode)},c.oscillator.start()}}]),angular.module("synthappApp").run(["$templateCache",function(a){a.put("views/custom.html",'<div id="page-wrapper" class="clearfix" ng-controller="patchAudio"> <div id="info" class="row"> <div class="col-xs-12"> <p>Synth</p> </div> </div> <div id="patchData" class="row"> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3"> <h2> Oscilator </h2> <div class="radio oscillator" name="oscilator" ng-model="oscillator.type"> <label><input type="radio" ng-click="oscillator.type = \'sine\'" name="optradio">Sine</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'triangle\'" name="optradio">Triangle</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'square\'" name="optradio">Square</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'sawtooth\'" name="optradio">Sawtooth</label> </div> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 octave"> <h2> Octave </h2> <span class="octave" name="frequency" ng-model="oscillator.frequency.value"> {{oscillator.frequency.value}} <button class="btn btn-lrg btn-default glyphicon glyphicon glyphicon-arrow-up"></button> <button class="btn btn-lrg btn-default glyphicon glyphicon glyphicon-arrow-down"></button> </span> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 volume"> <h2> Volume </h2> <span class="volume" name="volume" ng-model="gainNode.gain.value"> {{gainNode.gain.value}} <input type="range" id="volumeRange" ng-model="gainNode.gain.value" min="0" max="1" value="1" ng-click="volumeSlider()"> </span> <!-- <button class="btn btn-lrg btn-default glyphicon glyphicon-volume-up" ng-click="gainNode.gain.value = gainNode.gain.value + .01 "></button>\n          <button class="btn btn-lrg btn-default glyphicon glyphicon-volume-down" ng-click="gainNode.gain.value = gainNode.gain.value - .01 "></button> --> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 patches"> <h2> Patches </h2> <div ng-controller="PatchesCtrl"> <span id="patches"> <p>{{currentPatch}}</p> <button class="btn btn-lrg btn-default" ng-href="/#/patches">View Patches</button> </span> </div> </div> <div class="row synth-canvas"> <div class="col-xs-12"> <p> Canvas </p> <button class="btn btn-lrg btn-primary glyphicon glyphicon-play" ng-click="startSound()" ng-model="displayButton"></button> <button class="btn btn-lrg btn-primary glyphicon glyphicon-stop" ng-click="oscillator.disconnect(gainNode)" ng-model="displayButton"></button> <canvas id="canvas"></canvas> </div> </div> </div> </div>'),a.put("views/main.html",'<div class="home"> <div class="jumbotron"> <h1>SynthApp</h1> <p class="lead"> Experiment with sounds. </p> <br> <p> <a class="btn-lrg btn btn-success text-uppercase" ng-href="#/synth" href="#/"> start </a> </p> </div> <div class="row marketing"> <div class="col-xs-12"> <h2>Play</h2> <p> Welcome to Synthapp! Use our in app sythezier keyboard to experiment with sound. With synthapp you can generate digital soundswith our built in effects and oscliators. </p> </div> </div> <div class="row marketing"> <div class="col-xs-12 col-sm-6"> <h3>Oscilator</h3> <p>Oscilators define the main character of your sound. Syntapp lets you choose from 4 oscilators, Sine, Triangle, Square and Sawtooth.</p> </div> <div class="col-xs-12 col-sm-6"> <h3>Octave</h3> <p>Want more bass? More treble? Synthapp lets you choose and octave so you can hit the high, mid, and low notes.</p> </div> </div> <div class="row marketing"> <div class="col-xs-12"> <h2>Save</h2> <p> Like what you hear? Don\'t worry about memorizing your sound settings, Synthapp allows you to save your custom sound effects as a custom patch. We\'ll remember the settings so you don\'t have to. </p> </div> </div> </div>'),a.put("views/patches.html",'<div id="page-wrapper" class="clearfix patches" ng-controller="PatchesCtrl"> <div ng-if="storage"> <div id="info" class="row list-title"> <div class="col-xs-8 center-block"> <h1>Patches</h1> </div> </div> <div id="info" class="row"> <div class="col-xs-8 center-block"> <ul class="saved-patches-list"> <li ng-repeat="name in storage.savedPatches"> <a ng-href="/#/custom/{{name.patchName}}" class="btn btn-lg btn-primary">{{name.patchName}}</a> </li> </ul> </div> </div> </div> </div>'),a.put("views/synth.html",'<div id="page-wrapper" class="clearfix" ng-controller="testaudio"> <div id="info" class="row"> <div class="col-xs-12"> <p>Synth</p> </div> </div> <div id="patchData" class="row"> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3"> <h2> Oscilator </h2> <div class="radio oscillator" name="oscilator" ng-model="oscillator.type"> <label><input type="radio" ng-click="oscillator.type = \'sine\'" name="optradio">Sine</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'triangle\'" name="optradio">Triangle</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'square\'" name="optradio">Square</label> </div> <div class="radio"> <label><input type="radio" ng-click="oscillator.type = \'sawtooth\'" name="optradio">Sawtooth</label> </div> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 octave"> <h2> Octave </h2> <span class="octave" name="frequency" ng-model="oscillator.frequencyArray"> {{oscillator.frequency.value}} <button class="btn btn-lrg btn-default glyphicon glyphicon glyphicon-arrow-up"></button> <button class="btn btn-lrg btn-default glyphicon glyphicon glyphicon-arrow-down"></button> </span> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 volume"> <h2> Volume </h2> <span class="volume" name="volume" ng-model="gainNode.gain.value"> {{gainNode.gain.value}} <input type="range" id="volumeRange" ng-model="gainNode.gain.value" min="0" max="1" value="1" ng-click="volumeSlider()"> </span> <!-- <button class="btn btn-lrg btn-default glyphicon glyphicon-volume-up" ng-click="gainNode.gain.value = gainNode.gain.value + .01 "></button>\n          <button class="btn btn-lrg btn-default glyphicon glyphicon-volume-down" ng-click="gainNode.gain.value = gainNode.gain.value - .01 "></button> --> </div> <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 patches"> <button class="btn btn-lrg btn-default glyphicon glyphicon-menu-hamburger pull-right" ng-click="showHide()"></button> <h2> Patches </h2> <div ng-hide="isHidden" ng-controller="PatchesCtrl"> <span id="patches"> <p>Save as {{displayText}}</p> <div ng-messages="patchSaved"> <p class="patch-saved-alert bg-success text-success" ng-message="success"> Your custom patch {{patchName.text}} has been saved! </p> <p class="patch-saved-alert bg-warning text-warning" ng-message="duplicate"> {{patchName.text}} has already been saved. </p> </div> <input type="text" name="patchName" id="patch-name" ng-model="displayText"> <button class="btn btn-lrg btn-default" ng-hide="isHidden" ng-click="savePatch(displayText)">Save</button> <a class="btn btn-lrg btn-default" ng-hide="isHidden" ng-href="/#/patches">View Patches</a> </span> </div> </div> </div> </div> <div class="row synth-canvas"> <div class="col-xs-12"> <p> Canvas </p> <button class="btn btn-lrg btn-primary glyphicon glyphicon-play" ng-click="startSound()" ng-model="displayButton"></button> <button class="btn btn-lrg btn-primary glyphicon glyphicon-stop" ng-click="oscillator.disconnect(gainNode)" ng-model="displayButton"></button> <canvas id="canvas"></canvas> </div> </div>   <!-- <script src="scripts/synthpad.js"></script> -->')}]);